.row
  .col.s12.m8.offset-m2
    %input#notice{type: "hidden", value: "#{notice}"}

    .card
      .card-content
        %p
          %strong Name:
          = @task.name
        %p
          %strong Description:
          = @task.description
        %p
          %strong Project:
          = @project.name

    - if @open_task
      = form_for [@task, @open_task],
          html: { id: 'form-timer-stop'} do |f|
        = f.hidden_field :start, {id: 'time-start'}
        = f.hidden_field :finish, {id: 'time-stop'}

        .left-middle-btn
          %button.btn-floating.btn-large.waves-effect.waves-light{type: "submit"}
            %i.material-icons stop
      .card
        .card-content
          %span.card-title
            .row
              .col.s6
                %span#timer
    - else
      = form_for [@task, @task.timers.build],
          html: { id: 'form-timer-start' } do |f|
        = f.hidden_field :start, {id: 'time-start'}

        .fixed-action-btn.left-middle-btn
          %button.btn-floating.btn-large.waves-effect.waves-light{type: "submit"}
            %i.material-icons play_arrow



    -if @timers.any?
      .card
        .card-content
          %span.card-title Timers
          -@timers.each do |timer|
            .row
              .col.s3
                = timer.start.to_s( :db )
              .col.s3
                = timer.finish.to_s( :db )
              .col.s3
                = delta_time timer.start, timer.finish
              .col.s3
                = link_to options = { controller: :timers, action: :destroy, task_id: @task.id, id: timer.id}, method: :delete do
                  %i.material-icons delete


    %h3 Comments
    - @task.comments.each do |comment|
      %p
        %strong Author:
        = comment.author
      %p
        %strong Comment:
        = comment.body
      %p
        = link_to "Delete", {controller: 'comments', action: "destroy", task_id: @task.id, id: comment.id}, method: :delete
    %h3 Add a Comment
    = form_for([@task, @task.comments.build]) do |f|
      .input-field
        = f.text_field :author
        = f.label :author
      .input-field
        = f.text_area :body, { class: "materialize-textarea" }
        = f.label :body
      .input-field
        = f.submit "Submit Comment", { class: "btn waves-effect waves-light"}
    %br
    = link_to 'Edit', edit_task_path(@task), class: 'btn waves-effect waves-light'
    = link_to 'Back', tasks_path, class: 'btn waves-effect waves-light'

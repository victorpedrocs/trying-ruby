.row
  .col.s12.m8.offset-m2
    %p#notice= notice

    - if @open_task
      .card
        .card-content
          %span.card-title
            .row
              .col.s6
                = @open_task.start.to_s(:short)
              .col.s6
                = link_to options = {controller: :timers, action: :edit, task_id: @task.id, id: @open_task.id}, html_options = {class: 'btn-floating btn-large waves-effect waves-light'} do
                  %i.material-icons stop
    - else
      = link_to new_task_timer_path(@task), html_options = {class: 'btn-floating btn-large waves-effect waves-light'} do
        %i.material-icons play_arrow
    %p
      %strong Name:
      = @task.name
    %p
      %strong Description:
      = @task.description
    %p
      %strong Project:
      = @project.name
    %p
      %strong Id
      = @task.id

    -if @timers.any?
      .card
        .card-content
          %span.card-title Timers
          -@timers.each do |timer|
            .row
              .col.s6
                = timer.start.to_s(:short)
              .col.s6
                = timer.finish.to_s(:short)


    %h3 Comments
    - @task.comments.each do |comment|
      %p
        %strong Author:
        = comment.author
      %p
        %strong Comment:
        = comment.body
      %p
        = link_to "Delete", {controller: 'comments', action: "destroy", task_id: @task.id, id: comment.id}, method: :delete
    %h3 Add a Comment
    = form_for([@task, @task.comments.build]) do |f|
      .input-field
        = f.text_field :author
        = f.label :author
      .input-field
        = f.text_area :body, { class: "materialize-textarea" }
        = f.label :body
      .input-field
        = f.submit "Submit Comment", { class: "btn waves-effect waves-light"}
    %br
    = link_to 'Edit', edit_task_path(@task), class: 'btn waves-effect waves-light'
    = link_to 'Back', tasks_path, class: 'btn waves-effect waves-light'

    %br
    %br
